@model StudentManagement.ViewModel.MarksViewModel

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.0/font/bootstrap-icons.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">

@{
    ViewData["Title"] = "Marks Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<body>
    <div class="container-fluid py-4">
        <!-- Success or Error Messages -->
        @if (TempData["SuccessMessage"] != null || TempData["ErrorMessage"] != null)
        {
            <div class="container text-center my-3">
                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success d-inline-flex align-items-center">
                        <i class="bi bi-check-circle-fill me-2"></i><strong>Success!</strong> @TempData["SuccessMessage"]
                    </div>
                }

                @if (TempData["ErrorMessage"] != null)
                {
                    <div class="alert alert-danger d-inline-flex align-items-center">
                        <i class="bi bi-exclamation-triangle-fill me-2"></i><strong>Error!</strong> @TempData["ErrorMessage"]
                    </div>
                }
            </div>
        }

     

        <!-- Form Section -->
    <div class="card border-1 mb-4">
              <div class="card-header text-dark text-center">
                    <h3 class="mb-0 fw-bold">Get Marksheet Details</h3>
                </div>
            </div>
      
            <form asp-controller="Marks" asp-action="MarksFormSubmit" method="post">
                <div class="row mb-3 align-items-center">
                    <!-- Grade -->
                    <div class="col-md-4">
                        <label asp-for="GradeId" class="form-label fw-bold">Grade:</label>
                        <select asp-for="GradeId" class="form-select form-select-sm" id="GradeId">
                            <option value="">-- Select Grade --</option>
                            @if (Model.Grades != null)
                            {
                                @foreach (var grade in Model.Grades)
                                {
                                    <option value="@grade.Value">@grade.Text</option>
                                }
                            }
                        </select>
                    </div>

                    <!-- Class -->
                    <div class="col-md-4">
                        <label asp-for="ClassId" class="form-label fw-bold">Class:</label>
                        <select asp-for="ClassId" class="form-select form-select-sm" id="ClassId">
                            <option value="">-- Select Class --</option>
                        </select>
                    </div>

                    <!-- Term -->
                    <div class="col-md-4">
                        <label asp-for="Term" class="form-label fw-bold">Term:</label>
                        <select asp-for="Term" class="form-select form-select-sm" id="TermId">
                            <option value="">-- Select Term --</option>
                        </select>
                    </div>
                </div>

                <!-- Load Marks Button -->
                <div class="text-center">
                    <button type="button" id="loadmarksheet" class="btn btn-warning btn-sm">Load MarksSheet</button>
                </div>
            </form>
        </div>

        <!-- Loading Spinner -->
        <div id="loadingSpinner" class="d-none text-center my-3">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <p>Loading data...</p>
        </div>

        <div id="marksContainer" class="me-3">
            <!-- Checkboxes will be dynamically loaded here -->


        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        $(document).ready(function () {
            // Show loading spinner when making AJAX requests
            function showLoading() {
                $('#loadingSpinner').removeClass('d-none');
            }

            function hideLoading() {
                $('#loadingSpinner').addClass('d-none');
            }

            // AJAX call to fetch classes based on selected grade
            $('#GradeId').change(function () {
                var gradeId = $(this).val();
                var classId = $('#ClassId').val();

                // Show loading spinner while fetching data
                showLoading();

                // Update the classes dropdown
                if (gradeId) {
                    $.ajax({
                        url: '@Url.Action("UpdateClasses", "Marks")',
                        type: 'GET',
                        data: { gradeId: gradeId },
                        success: function (data) {
                            var classDropdown = $('#ClassId');
                            classDropdown.empty();
                            classDropdown.append('<option value="">-- Select Class --</option>');
                            $.each(data, function (index, item) {
                                classDropdown.append('<option value="' + item.value + '">' + item.text + '</option>');
                            });
                            hideLoading();
                        },
                        error: function () {
                            hideLoading();
                            alert("Failed to load classes.");
                        }
                    });
                } else {
                    hideLoading();
                    $('#ClassId').empty().append('<option value="">-- Select Class --</option>');
                }

                // Trigger fetching users when both GradeId and ClassId are selected
                if (gradeId && classId) {
                    getUsersByGradeAndClass(gradeId, classId);
                } else {
                    $('#UserID').empty().append('<option value="">-- Select User --</option>');
                }
            });

            // AJAX call to fetch users based on selected grade and class
            $('#ClassId').change(function () {
                var gradeId = $('#GradeId').val();
                var classId = $(this).val();

                if (gradeId && classId) {
                    getUsersByGradeAndClass(gradeId, classId);
                } else {
                    $('#UserID').empty().append('<option value="">-- Select User --</option>');
                }
            });

            // Function to fetch users
            function getUsersByGradeAndClass(gradeId, classId) {
                $.ajax({
                    url: '@Url.Action("GetUsersByGradeAndClass", "Marks")',
                    type: 'GET',
                    data: { gradeId: gradeId, classId: classId },
                    success: function (data) {
                        var userDropdown = $('#UserID');
                        userDropdown.empty();
                        userDropdown.append('<option value="">-- Select User --</option>');
                        $.each(data, function (index, item) {
                            userDropdown.append('<option value="' + item.value + '">' + item.text + '</option>');
                        });
                    },
                    error: function () {
                        alert('Error fetching users.');
                    }
                });
            }

            // Fetch terms based on selected grade
            $('#GradeId').change(function () {
                var gradeId = $(this).val();

                if (gradeId) {
                    $.ajax({
                        url: '@Url.Action("GetTermsByGrade", "Marks")',
                        type: 'GET',
                        data: { gradeId: gradeId },
                        success: function (data) {
                            var termDropdown = $('#TermId');
                            termDropdown.empty();
                            termDropdown.append('<option value="">-- Select Term --</option>');
                            $.each(data, function (index, item) {
                                termDropdown.append('<option value="' + item.value + '">' + item.text + '</option>');
                            });
                        },
                        error: function () {
                            console.error("Failed to load terms.");
                        }
                    });
                } else {
                    $('#TermId').empty().append('<option value="">-- Select Term --</option>');
                }
            });

            // Load marksheet
            $('#loadmarksheet').click(function (e) {
                e.preventDefault();

                var gradeId = $('#GradeId').val();
                var classId = $('#ClassId').val();
                var term = $('#TermId').val();

                if (!gradeId || !classId || !term) {
                    alert('Please select all fields.');
                    return;
                }

                // Fetch marksheet from the server
                $.ajax({
                    url: '/Marks/MarksSheetGenerator',
                    type: 'GET',
                    data: { gradeId: gradeId, classId: classId, term: term },
                    success: function (data) {
                        $('#marksContainer').html(data);
                    },
                    error: function () {
                        alert('Error loading marksheet.');
                    }
                });
            });
        });
    </script>
</body>
