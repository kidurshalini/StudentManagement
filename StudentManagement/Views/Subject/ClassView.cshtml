@model IEnumerable<StudentManagement.ViewModel.ClassViewModel>

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.0/font/bootstrap-icons.css" rel="stylesheet">

@{
    ViewData["Title"] = "Class Update";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<div class="container mt-5">
    <div class="card shadow">
        <div class="card-header bg-Secondary text-dark" style="background-color:#e5e4e2;">
            <h2 class="text-center mb-0">List of Classes</h2>
        </div>
        <div class="card-body">
            <!-- Search bar -->
            <div class="row mb-4">
                <div class="col-md-12 d-flex justify-content-end">
                    <!-- Flex to align to the right -->
                    <form method="get" asp-controller="Subject" asp-action="ClassView" class="d-flex align-items-center w-50">
                        <div class="input-group">
                            <input type="text"
                                   id="searchQuery"
                                   name="searchQuery"
                                   class="form-control form-control-sm rounded-pill"
                                   placeholder="🔍 Search students by name, email, or attributes..."
                                   value="@ViewContext.HttpContext.Request.Query["searchQuery"]" />
                            <button type="submit" class="btn btn-sm btn-primary rounded-pill ms-2">
                                <i class="bi bi-search"></i> Search
                            </button>
                        </div>
                    </form>
                </div>
            </div>
            <table class="table table-hover text-center table-bordered">
                <thead class="table-primary">
                    <tr style="font-size:20px">
                         @if (User.IsInRole(StudentManagement.Common.CustomRole.Student ))
                        {
                            <th>Grade</th>
                            <th>Class</th>
                           
                        }
                        else
                        {
                            <th>Grade</th>
                            <th>Class</th>
                            <th></th>
                        }
                    </tr>
                <tbody>
                        @foreach (var item in Model)
                        {
                        <tr>
                            @if (User.IsInRole(StudentManagement.Common.CustomRole.Student ))
                          {  <td>
                                    @Html.DisplayFor(modelItem => item.Grades.FirstOrDefault().Text) <!-- Display Grade -->
                            </td>
                            <td>
                                    @Html.DisplayFor(modelItem => item.Class) <!-- Display Class -->
                            </td>
                          }  else{
                            <td>
                                    @Html.DisplayFor(modelItem => item.Grades.FirstOrDefault().Text) <!-- Display Grade -->
                            </td>
                            <td>
                                    @Html.DisplayFor(modelItem => item.Class) <!-- Display Class -->
                            </td>

                            <td>
                                <a asp-controller="Subject" asp-action="ClassEdit" asp-route-id="@item.Id" class="btn btn-sm btn-warning me-2">Edit</a>

                                <a asp-controller="Subject" asp-action="ClassDelete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">Delete</a>
                            </td>
                            }
                         
                        </tr>
                        }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
